# Git 임시 저장(Stash) 기술

Git의 임시 저장(stash) 기술은 Git 사용자의 작업 흐름을 효율적으로 관리하는 데 도움을 줍니다. 이 내용을 통해 사용자는 임시 저장의 필요성을 이해하고, 작업 디렉토리와 스테이지 영역을 안전하게 보관할 수 있습니다. 또한, 저장된 목록을 보고 삭제하는 방법 및 특정 저장소의 내용을 복원하는 방법도 배울 수 있습니다. Git 명령어의 사용법을 익히고, 커밋 상태를 정리함으로써 작업 흐름을 원활하게 유지할 수 있습니다. 결과적으로 이 강의는 개발자들에게 Git 사용 시 많은 도움이 될 것입니다.

---

## 1. 📌 Git의 임시 저장소(Stash)와 스택의 구조

- **임시 저장(Stash)**은 작업 디렉토리와 스테이지 영역의 내용을 저장하는 기능입니다.
- Stash는 **스택(stack)**이라는 내부 구조를 가지고 있으며, 스택은 한쪽은 닫혀있고 반대쪽은 열려있는 형식입니다.
  - 스택에 자료를 넣는 행위를 **푸시(push)**라고 합니다.
  - 가장 최근에 입력된 내용이 스택의 꼭대기에 위치하게 됩니다.
  - 스택에서 자료를 꺼내는 명령은 **탑(top)**이라 하며, 가장 나중에 추가된 자료가 먼저 꺼내집니다.
- 저장 시에는 마지막 커밋의 내용을 바탕으로 작업 디렉토리와 스테이지 영역의 상태가 저장됩니다.

---

## 2. 📦 임시 저장 스택의 이해

- **스택은 Last In First Out(LIFO)** 구조로, 최근에 입력한 내용이 먼저 출력되는 형식입니다.
- 스위치(switch)나 체크아웃(checkout) 명령어를 사용하여 다른 히드나 브랜치로 이동하기 전에 스테이지와 작업 디렉토리의 상태를 동일하게 만들어야 합니다.
- 저장 명령어를 사용하면 작업 디렉토리와 스테이지 영역의 상태가 임시로 저장되어 동일한 상태가 됩니다.
- 저장할 때는 `-m` 옵션을 사용하여 저장한 내용에 대한 메시지를 추가할 수 있습니다.
- 추가적인 옵션:
  - `-k`: 스테이지 영역을 제외하고 저장합니다.
  - `-u`: 언트랙트(untracked) 파일까지 저장합니다.

---

## 3. 🗃️ 임시 저장 및 복원 방법

- 저장된 내용을 복원하려면 관련 명령어를 사용해야 하며, 스테이지 영역은 기본적으로 복원되지 않습니다.
- 스테이지 영역도 복원하고 싶다면 `--index` 옵션을 추가해야 합니다.
- 저장 시 **Keep index** 옵션을 사용하면 스테이지 영역을 저장하지 않고 작업 디렉토리만 저장할 수 있습니다.
- 여러 개의 스태시를 저장할 수 있으며, 가장 최근의 저장 목록을 확인하기 위해선 `git stash list` 명령어를 사용합니다.
- 특정 스태시의 내용:
  - `git show`: 스태시 내용을 확인합니다.
  - `-p` 옵션: 파일 간의 차이를 자세히 보여줍니다.

---

## 4. 🗂️ 임시 저장 관리 및 삭제 방법

- `git stash apply`: 작업 디렉토리와 스테이지에 임시 저장된 내용을 복원하지만, 스택 목록에서는 제거하지 않습니다.
- `git stash pop`: 임시 저장된 내용을 복원한 후 해당 항목을 스택 목록에서 삭제합니다. 복원과 삭제를 동시에 수행합니다.
- 특정 스태시 항목을 지명하여 복원할 때:
  - 스태시 목록의 번호를 이용합니다.
  - 인덱스를 반영하려면 `--index` 옵션을 추가합니다.
- 삭제 명령어:
  - `git stash drop`: 가장 최근의 임시 저장 항목을 삭제합니다.
  - `git stash clear`: 모든 항목을 삭제하여 리스트를 비웁니다.
- 언트랙트 파일:
  - `rm` 명령어나 `git clean` 명령어를 사용하여 삭제할 수 있습니다.
  - `-f` 옵션: 강제로 삭제합니다.
  - `-i` 옵션: 사용자와 상호작용하여 삭제 항목을 선택할 수 있습니다.

---

## 5. 🗂️ 임시 저장(Stash) 사용법

- 작업 디렉토리와 스테이지 영역을 stash에 저장하고 정리할 때 `-m` 옵션을 사용하여 메시지를 저장할 수 있습니다.
  - 기본적으로는 메시지 없이 일괄적으로 저장됩니다.
- 최근 또는 지정된 임시 저장소 내용을 가져오기 위해 숫자를 지정할 수 있으며, 0번이 가장 최근 항목을 의미합니다.
- 명령어 요약:
  - `git stash list`: 임시 저장 목록 확인
  - `git stash show`: 커밋 자료와 최신 stash 항목 간의 차이 조회
  - `git stash drop`: 최근 임시 저장 내용을 삭제
  - `git stash clear`: 모든 임시 저장 목록 삭제
  - `git stash apply`: 저장된 내용 복원
  - `--index` 옵션: 인덱스까지 반영하여 복원

---
